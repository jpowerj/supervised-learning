geom_abline(aes(slope=slope, intercept=intercept), linetype="dashed", size=1) +
ggtitle("Guess 1: 90% Accuracy") +
geom_point(data=fake_sup_data, aes(x=sqft, y=bedrooms, color=rating), size=g_pointsize) +
geom_ribbon(data=f1_data, aes(x=line_x, ymin=-Inf, ymax=line_y, fill="Disliked"), alpha=0.2) +
geom_ribbon(data=f1_data, aes(x=line_x, ymin=line_y, ymax=Inf, fill="Liked"), alpha=0.2) +
labs(
x = "Square Footage",
y = "Number of Bedrooms",
color = "True Label"
) +
global_theme +
expand_limits(x=data_range, y=c(0.8,2.2)) +
scale_fill_manual(values=c("Liked"="blue","Disliked"="red"), name="Guess")
f2 <- function(x) { return(0.00065*x + 0.5) }
f2_data <- tibble::tibble(line_x=ribbon_range,line_y=c(f2(710),f2(data_range),f2(Inf)))
g2_plot <- ggplot(data=(line_data %>% filter(id==1))) +
geom_abline(aes(slope=slope, intercept=intercept), linetype="dashed", size=1) +
ggtitle("Guess 2: 3/5 Correct") +
geom_point(data=fake_sup_data, aes(x=sqft, y=bedrooms, color=rating), size=g_pointsize) +
labs(
x = "Square Footage",
y = "Number of Bedrooms",
color = "True Label"
) +
geom_ribbon(data=f2_data, aes(x=line_x, ymin=-Inf, ymax=line_y, fill="Liked"), alpha=0.2) +
geom_ribbon(data=f2_data, aes(x=line_x, ymin=line_y, ymax=Inf, fill="Disliked"), alpha=0.2) +
global_theme +
expand_limits(x=data_range, y=c(0.8,2.2)) +
scale_fill_manual(values=c("Liked"="blue","Disliked"="red"), name="Guess")
g1_plot + g2_plot
fake_sup_data
f2
f2(fake_sup_data[,sqft])
f2(fake_sup_data[,'sqft'])
fake_sup_data %>% mutate(guess2=f2(sqft)>sqft)
fake_sup_data %>% mutate(boundary2=f2(sqft))
fake_sup_data %>% mutate(boundary2=f2(sqft)) %>% mutate(guessDislike = bedrooms > boundary2)
fake_sup_data %>% mutate(boundary2=f2(sqft)) %>% mutate(guessDislike = bedrooms > boundary2) %>% mutate(correct = (rating=="Disliked" && guessDislike))
fake_sup_data %>% mutate(boundary2=f2(sqft)) %>% mutate(guessDislike = bedrooms > boundary2) %>% mutate(correct = ((rating=="Disliked") && (guessDislike)))
set.seed(1948)
library(knitr)
library(ggplot2)
library(dplyr)
library(ggforce)
library(patchwork)
global_theme <- ggplot2::theme_classic() + ggplot2::theme(
plot.title = element_text(hjust = 0.5, size = 18),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 14, hjust = 0.5),
legend.text = element_text(size = 12),
legend.box.background = element_rect(colour = "black")
)
knitr::opts_chunk$set(fig.align="center")
g_pointsize <- 6
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
sup_data <- tibble::tribble(
~home_id, ~sqft, ~bedrooms, ~rating,
0, 1000, 1, "Disliked",
1, 2000, 2, "Liked",
2, 2500, 1, "Liked",
3, 1500, 2, "Disliked",
4, 2200, 1, "Liked"
)
sup_data
unsup_data <- tibble::tribble(
~home_id, ~sqft, ~bedrooms,
0, 1000, 1,
1, 2000, 2,
2, 2500, 1,
3, 1500, 2,
4, 2200, 1
)
unsup_data
ggplot(sup_data, aes(x=sqft, y=bedrooms, color=rating)) +
geom_point(size=g_pointsize) +
labs(
title = "Supervised Data: House Listings",
x = "Square Footage",
y = "Number of Bedrooms",
color = "Outcome"
) +
expand_limits(x=c(800,2700), y=c(0.8,2.2)) +
global_theme
# To force a legend
unsup_grouped <- unsup_data %>% mutate(big=bedrooms > 1)
unsup_grouped[['big']] <- factor(unsup_grouped[['big']], labels=c("?1","?2"))
ggplot(unsup_grouped, aes(x=sqft, y=bedrooms, fill=big)) +
geom_point(size=g_pointsize) +
labs(
x = "Square Footage",
y = "Number of Bedrooms",
fill = "?"
) +
global_theme +
expand_limits(x=c(800,2700), y=c(0.8,2.2)) +
ggtitle("Unsupervised Data: House Listings") +
theme(legend.background = element_rect(fill="white", color="white"), legend.box.background = element_rect(fill="white"), legend.text = element_text(color="white"), legend.title = element_text(color="white"), legend.position = "right") +
scale_fill_discrete(labels=c("?","?")) +
#scale_color_discrete(values=c("white","white"))
scale_color_manual(name=NULL, values=c("white","white")) +
#scale_color_manual(values=c("?1"="white","?2"="white"))
guides(fill = guide_legend(override.aes = list(shape = NA)))
ggplot(sup_data, aes(x=sqft, y=bedrooms, color=rating)) +
geom_point(size=g_pointsize) +
labs(
title = "Supervised Data: House Listings",
x = "Square Footage",
y = "Number of Bedrooms",
color = "Outcome"
) +
global_theme +
expand_limits(x=c(800,2700), y=c(0.8,2.2)) +
geom_vline(xintercept = 1750, linetype="dashed", color = "black", size=1) +
annotate('rect', xmin=-Inf, xmax=1750, ymin=-Inf, ymax=Inf, alpha=.2, fill='red') +
annotate('rect', xmin=1750, xmax=Inf, ymin=-Inf, ymax=Inf, alpha=.2, fill='blue')
#geom_rect(aes(xmin=-Inf, xmax=Inf, ymin=0, ymax=Inf, alpha=.2, fill='red'))
ggplot(unsup_grouped, aes(x=sqft, y=bedrooms)) +
scale_color_brewer(palette = "PuOr") +
geom_mark_ellipse(expand=0.1, aes(fill=big), size = 1) +
geom_point(size=g_pointsize) +
labs(
x = "Square Footage",
y = "Number of Bedrooms",
fill = "?"
) +
global_theme +
ggtitle("Unsupervised Data: House Listings") +
#theme(legend.position = "none") +
#theme(legend.title = text_element("?"))
expand_limits(x=c(800,2700), y=c(0.8,2.2)) +
scale_fill_manual(values=c(cbPalette[3],cbPalette), labels=c("?","?"))
#scale_fill_manual(labels=c("?","?"))
x_min <- 0
x_max <- 3000
y_min <- -1
y_max <- 3
rand_y0 <- runif(50, min=y_min, max=y_max)
rand_y1 <- runif(50, min=y_min, max=y_max)
rand_slope <- (rand_y1 - rand_y0)/(x_max - x_min)
rand_intercept <- rand_y0
rand_lines <- tibble::tibble(id=1:50, slope=rand_slope, intercept=rand_intercept)
ggplot() +
geom_abline(data=rand_lines, aes(slope=slope, intercept=intercept)) +
xlim(0,3000) +
ylim(0,2)
ggplot(sup_data, aes(x=sqft, y=bedrooms, color=rating)) +
geom_point(size=g_pointsize) +
labs(
title = "The Like vs. Dislike Boundary: 50 Guesses",
x = "Square Footage",
y = "Number of Bedrooms",
color = "Outcome"
) +
global_theme +
expand_limits(x=c(800,2700), y=c(0.8,2.2)) +
geom_abline(data=rand_lines, aes(slope=slope, intercept=intercept), linetype="dashed")
#base_plot <- ggplot(sup_data, aes(x=sqft, y=bedrooms, color=liked)) +
#  geom_point(size=g_pointsize) +
#  labs(
#    x = "Square Footage",
#    y = "Number of Bedrooms",
#    color = "Liked?"
#  ) +
#  global_theme +
#  expand_limits(x=c(800,2700), y=c(0.8,2.2))
line_data <- tibble::tribble(
~id, ~slope, ~intercept,
0, 0, 0.75,
1, 0.00065, 0.5
)
data_range <- 800:2700
ribbon_range <- c(-Inf,data_range,Inf)
f1 <- function(x) { return(0*x + 0.75) }
f1_data <- tibble::tibble(line_x=ribbon_range,line_y=c(Inf,f1(data_range),-Inf))
g1_plot <- ggplot(data=(line_data %>% filter(id==0))) +
geom_abline(aes(slope=slope, intercept=intercept), linetype="dashed", size=1) +
ggtitle("Guess 1: 60% Accuracy") +
geom_point(data=sup_data, aes(x=sqft, y=bedrooms, color=rating), size=g_pointsize) +
geom_ribbon(data=f1_data, aes(x=line_x, ymin=-Inf, ymax=line_y, fill="Disliked"), alpha=0.2) +
geom_ribbon(data=f1_data, aes(x=line_x, ymin=line_y, ymax=Inf, fill="Liked"), alpha=0.2) +
labs(
x = "Square Footage",
y = "Number of Bedrooms",
color = "True Label"
) +
global_theme +
expand_limits(x=data_range, y=c(0.8,2.2)) +
scale_fill_manual(values=c("Liked"="blue","Disliked"="red"), name="Guess")
f2 <- function(x) { return(0.00065*x + 0.5) }
f2_data <- tibble::tibble(line_x=ribbon_range,line_y=c(f2(710),f2(data_range),f2(Inf)))
g2_plot <- ggplot(data=(line_data %>% filter(id==1))) +
geom_abline(aes(slope=slope, intercept=intercept), linetype="dashed", size=1) +
ggtitle("Guess 2: 60% Accuracy") +
geom_point(data=sup_data, aes(x=sqft, y=bedrooms, color=rating), size=g_pointsize) +
labs(
x = "Square Footage",
y = "Number of Bedrooms",
color = "True Label"
) +
geom_ribbon(data=f2_data, aes(x=line_x, ymin=-Inf, ymax=line_y, fill="Liked"), alpha=0.2) +
geom_ribbon(data=f2_data, aes(x=line_x, ymin=line_y, ymax=Inf, fill="Disliked"), alpha=0.2) +
global_theme +
expand_limits(x=data_range, y=c(0.8,2.2)) +
scale_fill_manual(values=c("Liked"="blue","Disliked"="red"), name="Guess")
g1_plot + g2_plot
#base_plot <- ggplot(sup_data, aes(x=sqft, y=bedrooms, color=liked)) +
#  geom_point(size=g_pointsize) +
#  labs(
#    x = "Square Footage",
#    y = "Number of Bedrooms",
#    color = "Liked?"
#  ) +
#  global_theme +
#  expand_limits(x=c(800,2700), y=c(0.8,2.2))
gen_homes <- function(n) {
rand_sqft <- runif(n, min=2000, max=3000)
rand_bedrooms <- sample(c(1,2), size=n, prob=c(0.5,0.5), replace=TRUE)
rand_ids <- 1:n
rand_rating <- "Liked"
rand_tibble <- tibble::tibble(home_id=rand_ids, sqft=rand_sqft, bedrooms=rand_bedrooms, rating=rand_rating)
return(rand_tibble)
}
fake_homes <- gen_homes(18)
fake_sup_data <- dplyr::bind_rows(sup_data, fake_homes)
line_data <- tibble::tribble(
~id, ~slope, ~intercept,
0, 0, 0.75,
1, 0.00065, 0.5
)
f1 <- function(x) { return(0*x + 0.75) }
f2 <- function(x) { return(0.00065*x + 0.5) }
# And check accuracy
fake_sup_data <- fake_sup_data %>% mutate(boundary2=f2(sqft)) %>% mutate(guessDislike = bedrooms > boundary2)
data_range <- 800:2700
ribbon_range <- c(-Inf,data_range,Inf)
f1_data <- tibble::tibble(line_x=ribbon_range,line_y=c(Inf,f1(data_range),-Inf))
g1_plot <- ggplot(data=(line_data %>% filter(id==0))) +
geom_abline(aes(slope=slope, intercept=intercept), linetype="dashed", size=1) +
ggtitle("Guess 1: 90% Accuracy") +
geom_point(data=fake_sup_data, aes(x=sqft, y=bedrooms, color=rating), size=g_pointsize) +
geom_ribbon(data=f1_data, aes(x=line_x, ymin=-Inf, ymax=line_y, fill="Disliked"), alpha=0.2) +
geom_ribbon(data=f1_data, aes(x=line_x, ymin=line_y, ymax=Inf, fill="Liked"), alpha=0.2) +
labs(
x = "Square Footage",
y = "Number of Bedrooms",
color = "True Label"
) +
global_theme +
expand_limits(x=data_range, y=c(0.8,2.2)) +
scale_fill_manual(values=c("Liked"="blue","Disliked"="red"), name="Guess")
f2_data <- tibble::tibble(line_x=ribbon_range,line_y=c(f2(710),f2(data_range),f2(Inf)))
g2_plot <- ggplot(data=(line_data %>% filter(id==1))) +
geom_abline(aes(slope=slope, intercept=intercept), linetype="dashed", size=1) +
ggtitle("Guess 2: 3/5 Correct") +
geom_point(data=fake_sup_data, aes(x=sqft, y=bedrooms, color=rating, shape=guessDislike), size=g_pointsize) +
labs(
x = "Square Footage",
y = "Number of Bedrooms",
color = "True Label"
) +
geom_ribbon(data=f2_data, aes(x=line_x, ymin=-Inf, ymax=line_y, fill="Liked"), alpha=0.2) +
geom_ribbon(data=f2_data, aes(x=line_x, ymin=line_y, ymax=Inf, fill="Disliked"), alpha=0.2) +
global_theme +
expand_limits(x=data_range, y=c(0.8,2.2)) +
scale_fill_manual(values=c("Liked"="blue","Disliked"="red"), name="Guess")
g1_plot + g2_plot
fake_sup_data
fake_sup_data %>% mutate(correct = (rating=="Disliked") & (guessDislike))
set.seed(1948)
library(knitr)
library(ggplot2)
library(dplyr)
library(ggforce)
library(patchwork)
global_theme <- ggplot2::theme_classic() + ggplot2::theme(
plot.title = element_text(hjust = 0.5, size = 18),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 14, hjust = 0.5),
legend.text = element_text(size = 12),
legend.box.background = element_rect(colour = "black")
)
knitr::opts_chunk$set(fig.align="center")
g_pointsize <- 6
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
sup_data <- tibble::tribble(
~home_id, ~sqft, ~bedrooms, ~rating,
0, 1000, 1, "Disliked",
1, 2000, 2, "Liked",
2, 2500, 1, "Liked",
3, 1500, 2, "Disliked",
4, 2200, 1, "Liked"
)
sup_data
unsup_data <- tibble::tribble(
~home_id, ~sqft, ~bedrooms,
0, 1000, 1,
1, 2000, 2,
2, 2500, 1,
3, 1500, 2,
4, 2200, 1
)
unsup_data
ggplot(sup_data, aes(x=sqft, y=bedrooms, color=rating)) +
geom_point(size=g_pointsize) +
labs(
title = "Supervised Data: House Listings",
x = "Square Footage",
y = "Number of Bedrooms",
color = "Outcome"
) +
expand_limits(x=c(800,2700), y=c(0.8,2.2)) +
global_theme
# To force a legend
unsup_grouped <- unsup_data %>% mutate(big=bedrooms > 1)
unsup_grouped[['big']] <- factor(unsup_grouped[['big']], labels=c("?1","?2"))
ggplot(unsup_grouped, aes(x=sqft, y=bedrooms, fill=big)) +
geom_point(size=g_pointsize) +
labs(
x = "Square Footage",
y = "Number of Bedrooms",
fill = "?"
) +
global_theme +
expand_limits(x=c(800,2700), y=c(0.8,2.2)) +
ggtitle("Unsupervised Data: House Listings") +
theme(legend.background = element_rect(fill="white", color="white"), legend.box.background = element_rect(fill="white"), legend.text = element_text(color="white"), legend.title = element_text(color="white"), legend.position = "right") +
scale_fill_discrete(labels=c("?","?")) +
#scale_color_discrete(values=c("white","white"))
scale_color_manual(name=NULL, values=c("white","white")) +
#scale_color_manual(values=c("?1"="white","?2"="white"))
guides(fill = guide_legend(override.aes = list(shape = NA)))
ggplot(sup_data, aes(x=sqft, y=bedrooms, color=rating)) +
geom_point(size=g_pointsize) +
labs(
title = "Supervised Data: House Listings",
x = "Square Footage",
y = "Number of Bedrooms",
color = "Outcome"
) +
global_theme +
expand_limits(x=c(800,2700), y=c(0.8,2.2)) +
geom_vline(xintercept = 1750, linetype="dashed", color = "black", size=1) +
annotate('rect', xmin=-Inf, xmax=1750, ymin=-Inf, ymax=Inf, alpha=.2, fill='red') +
annotate('rect', xmin=1750, xmax=Inf, ymin=-Inf, ymax=Inf, alpha=.2, fill='blue')
#geom_rect(aes(xmin=-Inf, xmax=Inf, ymin=0, ymax=Inf, alpha=.2, fill='red'))
ggplot(unsup_grouped, aes(x=sqft, y=bedrooms)) +
scale_color_brewer(palette = "PuOr") +
geom_mark_ellipse(expand=0.1, aes(fill=big), size = 1) +
geom_point(size=g_pointsize) +
labs(
x = "Square Footage",
y = "Number of Bedrooms",
fill = "?"
) +
global_theme +
ggtitle("Unsupervised Data: House Listings") +
#theme(legend.position = "none") +
#theme(legend.title = text_element("?"))
expand_limits(x=c(800,2700), y=c(0.8,2.2)) +
scale_fill_manual(values=c(cbPalette[3],cbPalette), labels=c("?","?"))
#scale_fill_manual(labels=c("?","?"))
x_min <- 0
x_max <- 3000
y_min <- -1
y_max <- 3
rand_y0 <- runif(50, min=y_min, max=y_max)
rand_y1 <- runif(50, min=y_min, max=y_max)
rand_slope <- (rand_y1 - rand_y0)/(x_max - x_min)
rand_intercept <- rand_y0
rand_lines <- tibble::tibble(id=1:50, slope=rand_slope, intercept=rand_intercept)
ggplot() +
geom_abline(data=rand_lines, aes(slope=slope, intercept=intercept)) +
xlim(0,3000) +
ylim(0,2)
ggplot(sup_data, aes(x=sqft, y=bedrooms, color=rating)) +
geom_point(size=g_pointsize) +
labs(
title = "The Like vs. Dislike Boundary: 50 Guesses",
x = "Square Footage",
y = "Number of Bedrooms",
color = "Outcome"
) +
global_theme +
expand_limits(x=c(800,2700), y=c(0.8,2.2)) +
geom_abline(data=rand_lines, aes(slope=slope, intercept=intercept), linetype="dashed")
#base_plot <- ggplot(sup_data, aes(x=sqft, y=bedrooms, color=liked)) +
#  geom_point(size=g_pointsize) +
#  labs(
#    x = "Square Footage",
#    y = "Number of Bedrooms",
#    color = "Liked?"
#  ) +
#  global_theme +
#  expand_limits(x=c(800,2700), y=c(0.8,2.2))
line_data <- tibble::tribble(
~id, ~slope, ~intercept,
0, 0, 0.75,
1, 0.00065, 0.5
)
data_range <- 800:2700
ribbon_range <- c(-Inf,data_range,Inf)
f1 <- function(x) { return(0*x + 0.75) }
f1_data <- tibble::tibble(line_x=ribbon_range,line_y=c(Inf,f1(data_range),-Inf))
g1_plot <- ggplot(data=(line_data %>% filter(id==0))) +
geom_abline(aes(slope=slope, intercept=intercept), linetype="dashed", size=1) +
ggtitle("Guess 1: 60% Accuracy") +
geom_point(data=sup_data, aes(x=sqft, y=bedrooms, color=rating), size=g_pointsize) +
geom_ribbon(data=f1_data, aes(x=line_x, ymin=-Inf, ymax=line_y, fill="Disliked"), alpha=0.2) +
geom_ribbon(data=f1_data, aes(x=line_x, ymin=line_y, ymax=Inf, fill="Liked"), alpha=0.2) +
labs(
x = "Square Footage",
y = "Number of Bedrooms",
color = "True Label"
) +
global_theme +
expand_limits(x=data_range, y=c(0.8,2.2)) +
scale_fill_manual(values=c("Liked"="blue","Disliked"="red"), name="Guess")
f2 <- function(x) { return(0.00065*x + 0.5) }
f2_data <- tibble::tibble(line_x=ribbon_range,line_y=c(f2(710),f2(data_range),f2(Inf)))
g2_plot <- ggplot(data=(line_data %>% filter(id==1))) +
geom_abline(aes(slope=slope, intercept=intercept), linetype="dashed", size=1) +
ggtitle("Guess 2: 60% Accuracy") +
geom_point(data=sup_data, aes(x=sqft, y=bedrooms, color=rating), size=g_pointsize) +
labs(
x = "Square Footage",
y = "Number of Bedrooms",
color = "True Label"
) +
geom_ribbon(data=f2_data, aes(x=line_x, ymin=-Inf, ymax=line_y, fill="Liked"), alpha=0.2) +
geom_ribbon(data=f2_data, aes(x=line_x, ymin=line_y, ymax=Inf, fill="Disliked"), alpha=0.2) +
global_theme +
expand_limits(x=data_range, y=c(0.8,2.2)) +
scale_fill_manual(values=c("Liked"="blue","Disliked"="red"), name="Guess")
g1_plot + g2_plot
#base_plot <- ggplot(sup_data, aes(x=sqft, y=bedrooms, color=liked)) +
#  geom_point(size=g_pointsize) +
#  labs(
#    x = "Square Footage",
#    y = "Number of Bedrooms",
#    color = "Liked?"
#  ) +
#  global_theme +
#  expand_limits(x=c(800,2700), y=c(0.8,2.2))
gen_homes <- function(n) {
rand_sqft <- runif(n, min=2000, max=3000)
rand_bedrooms <- sample(c(1,2), size=n, prob=c(0.5,0.5), replace=TRUE)
rand_ids <- 1:n
rand_rating <- "Liked"
rand_tibble <- tibble::tibble(home_id=rand_ids, sqft=rand_sqft, bedrooms=rand_bedrooms, rating=rand_rating)
return(rand_tibble)
}
fake_homes <- gen_homes(18)
fake_sup_data <- dplyr::bind_rows(sup_data, fake_homes)
line_data <- tibble::tribble(
~id, ~slope, ~intercept,
0, 0, 0.75,
1, 0.00065, 0.5
)
f1 <- function(x) { return(0*x + 0.75) }
f2 <- function(x) { return(0.00065*x + 0.5) }
# And check accuracy
fake_sup_data <- fake_sup_data %>% mutate(boundary1=f1(sqft)) %>% mutate(guessDislike1 = bedrooms < boundary1) %>% mutate(correct1 = ((rating=="Disliked") & (guessDislike1)) | (rating=="Liked") & (!guessDislike1))
fake_sup_data <- fake_sup_data %>% mutate(boundary2=f2(sqft)) %>% mutate(guessDislike2 = bedrooms > boundary2) %>% mutate(correct2 = ((rating=="Disliked") & (guessDislike2)) | (rating=="Liked") & (!guessDislike2))
data_range <- 800:2700
ribbon_range <- c(-Inf,data_range,Inf)
f1_data <- tibble::tibble(line_x=ribbon_range,line_y=c(Inf,f1(data_range),-Inf))
g1_plot <- ggplot(data=(line_data %>% filter(id==0))) +
geom_abline(aes(slope=slope, intercept=intercept), linetype="dashed", size=1) +
ggtitle("Guess 1: 90% Accuracy") +
geom_point(data=fake_sup_data, aes(x=sqft, y=bedrooms, fill=rating, color=rating, shape=factor(correct1, levels=c(TRUE,FALSE))), size=g_pointsize) +
scale_shape_manual(values=c(24, 25)) +
geom_ribbon(data=f1_data, aes(x=line_x, ymin=-Inf, ymax=line_y, fill="Disliked"), alpha=0.2) +
geom_ribbon(data=f1_data, aes(x=line_x, ymin=line_y, ymax=Inf, fill="Liked"), alpha=0.2) +
labs(
x = "Square Footage",
y = "Number of Bedrooms",
color = "True Label",
shape = "Correct Guess"
) +
global_theme +
expand_limits(x=data_range, y=c(0.8,2.2)) +
scale_fill_manual(values=c("Liked"="blue","Disliked"="red"), name="Guess")
f2_data <- tibble::tibble(line_x=ribbon_range,line_y=c(f2(710),f2(data_range),f2(Inf)))
g2_plot <- ggplot(data=(line_data %>% filter(id==1))) +
geom_abline(aes(slope=slope, intercept=intercept), linetype="dashed", size=1) +
ggtitle("Guess 2: 3/5 Correct") +
geom_point(data=fake_sup_data, aes(x=sqft, y=bedrooms, fill=rating, color=rating, shape=factor(correct2, levels=c(TRUE,FALSE))), size=g_pointsize) +
scale_shape_manual(values=c(24, 25)) +
labs(
x = "Square Footage",
y = "Number of Bedrooms",
color = "True Label",
shape = "Correct Guess"
) +
geom_ribbon(data=f2_data, aes(x=line_x, ymin=-Inf, ymax=line_y, fill="Liked"), alpha=0.2) +
geom_ribbon(data=f2_data, aes(x=line_x, ymin=line_y, ymax=Inf, fill="Disliked"), alpha=0.2) +
global_theme +
expand_limits(x=data_range, y=c(0.8,2.2)) +
scale_fill_manual(values=c("Liked"="blue","Disliked"="red"), name="Guess")
g1_plot + g2_plot
fake_sup_data
mean(fake_sup_data[correct1])
mean(fake_sup_data[correct1,])
fake_sup_data %>% summarize(mean())
fake_sup_data %>% summarize(mean
)
fake_sup_data %>% summarize(mean)
fake_sup_data %>% summarize(m=mean)
fake_sup_data %>% summarize(m=mean())
fake_sup_data %>% summarize_all(mean)
